<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">

    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <property name="log.base" value="./logs" />

    <springProperty scope="local" name="SKYWALKING-LOG" source="jpower.skywalking.log" defaultValue="true" />

    <springProfile name="dev">
        <springProperty scope="local" name="DESTINATION" source="jpower.dev.elk.destination" />
    </springProfile>
    <springProfile name="test">
        <springProperty scope="local" name="DESTINATION" source="jpower.test.elk.destination" />
    </springProfile>
    <springProfile name="prod">
        <springProperty scope="local" name="DESTINATION" source="jpower.prod.elk.destination"/>
    </springProfile>

    <if condition='isNull("DESTINATION") || property("DESTINATION").equals("")'>
        <then>
            <property name="ELK_MODE" value="FALSE" />
            <property name="LOG_APPENDER" value="log" />
            <property name="ERROR_APPENDER" value="error" />
        </then>
        <else>
            <property name="ELK_MODE" value="TRUE" />
            <property name="LOG_APPENDER" value="log_logstash" />
            <property name="ERROR_APPENDER" value="error_logstash" />
        </else>
    </if>

    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){blue} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(%tid){red} %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>

    <!-- 文件日志格式-->
    <property name="patternAsyn" value="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%tid] [%thread] [%logger] - %msg%n" />

    <!--控制台日志， 控制台输出 -->
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout">
                <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
                <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            </layout>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!--  日志文件输出  -->
    <appender name="log" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.base}/log/log.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${log.base}/log/log-%d{yyyyMMdd}.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout">
                <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
                <pattern>${patternAsyn}</pattern>
            </layout>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 打印日志级别 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.base}/error/error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${log.base}/error/error-%d{yyyyMMdd}.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout">
                <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
                <pattern>${patternAsyn}</pattern>
            </layout>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!--  skywalking日志输出  -->
    <appender name="skywalking_log" class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.log.GRPCLogClientAppender">
        <!-- 日志输出编码 -->
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout">
                <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
                <pattern>${patternAsyn}</pattern>
            </layout>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!--  ELK日志输出  -->
    <if condition='property("ELK_MODE").toUpperCase().contains("TRUE")'>
        <then>
            <!-- 推送日志至elk -->
            <appender name="log_logstash" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
                <destination>${DESTINATION}</destination>
                <!-- 日志输出编码 -->
                <encoder charset="UTF-8" class="net.logstash.logback.encoder.LogstashEncoder">
                    <provider class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.logstash.TraceIdJsonProvider">
                    </provider>
                    <customFields>{"pid":"${PID}"}</customFields>
                </encoder>
                <!-- 打印日志级别 -->
                <filter class="ch.qos.logback.classic.filter.LevelFilter">
                    <level>INFO</level>
                    <onMatch>ACCEPT</onMatch>
                    <onMismatch>DENY</onMismatch>
                </filter>
            </appender>

            <!-- 推送日志至elk -->
            <appender name="error_logstash" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
                <destination>${DESTINATION}</destination>
                <!-- 日志输出编码 -->
                <encoder charset="UTF-8" class="net.logstash.logback.encoder.LogstashEncoder">
                    <provider class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.logstash.TraceIdJsonProvider">
                    </provider>
                    <customFields>{"pid":"${PID}"}</customFields>
                </encoder>
                <!-- 打印日志级别 -->
                <filter class="ch.qos.logback.classic.filter.LevelFilter">
                    <level>ERROR</level>
                    <onMatch>ACCEPT</onMatch>
                    <onMismatch>DENY</onMismatch>
                </filter>
            </appender>
        </then>
    </if>

    <logger name="io.netty.util.internal" level="info" />
    <logger name="org.hibernate" level="info" />
    <logger name="org.jboss.logging" level="info" />
    <logger name="org.springframework.core.env" level="info" />
    <logger name="org.springframework.beans.factory.support" level="info" />
    <!-- 去掉自动装配信息，需要的自行打开 -->
    <logger name="org.springframework.boot.autoconfigure.logging" level="info" additivity="false" />
    <!--myibatis log configure-->
    <logger name="com.apache.ibatis" level="info"/>
    <logger name="com.ibatis" level="info" />
    <logger name="com.ibatis.common.jdbc.SimpleDataSource" level="info" />
    <logger name="com.ibatis.common.jdbc.ScriptRunner" level="info" />
    <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="info" />
    <logger name="java.sql.Connection" level="info" />
    <logger name="java.sql.Statement" level="info" />
    <logger name="java.sql.PreparedStatement" level="info" />
    <logger name="com.baomidou.mybatisplus" level="WARN"/>
    <!-- 减少nacos日志 -->
    <logger name="com.alibaba.nacos" level="ERROR"/>
    <!-- 不打印SQL信息 -->
    <logger name="com.wlcb.jpower.dbs.dao" level="info" />

    <!-- 日志输出级别 -->
    <springProfile name="dev">
        <root level="DEBUG">
            <appender-ref ref="${LOG_APPENDER}"/>
            <appender-ref ref="${ERROR_APPENDER}"/>
            <if condition='property("SKYWALKING-LOG").toUpperCase().contains("TRUE")'>
                <then>
                    <appender-ref ref="skywalking_log"/>
                </then>
            </if>
            <appender-ref ref="stdout" />
        </root>
    </springProfile>
    <springProfile name="!dev">
        <root level="INFO">
            <appender-ref ref="${LOG_APPENDER}"/>
            <appender-ref ref="${ERROR_APPENDER}"/>
            <if condition='property("SKYWALKING-LOG").toUpperCase().contains("TRUE")'>
                <then>
                    <appender-ref ref="skywalking_log"/>
                </then>
            </if>
        </root>
    </springProfile>
</configuration>
